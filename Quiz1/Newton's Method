#
#Quiz
#
#Tony Liu
#11/27/21
#calculate Newton's Method


    .data
n:	.float  3.0        #temp value
prompt:	.asciiz "Enter an integer for n: "      #display intruction
result: .asciiz "\nThe square root is: "

    .text
    .globl main

main:
    li	$v0, 4		
	la	$a0, prompt         # print string
	syscall			
	li	$v0, 5		
	syscall		            # get the integer
    
    mtc1	$v0, $f1	    # move integer to coprocessor 1
	cvt.s.w	$f1, $f1	    # convert integer to float
    s.s	    $f1, n		    # store it in n
	nop	

    l.s	    $f0, n		    # get n
	li.s	$f1, 1.0	    # constant 1.0
	li.s	$f2, 2.0	    # constant 2.0
	li.s	$f3, 1.0	    # x == first approx.
	li.s	$f4, 1.0e-5	    #accuracy limit

loop: 
    mov.s $f5,$f0           #x' = n
    div.s $f5,$f5,$f3       #x' = n/x
    add.s $f5,$f3,$f5       #x' = x+(n/x)
    div.s $f3,$f5,$f2       #x = (x+n/x)/2
#aproximantion to the square root
    mul.s	$f6, $f3, $f3	# check: x^2
    div.s   $f6, $f0, $f6   # n/x^2
    sub.s   $f6, $f6, $f1   # n/x^2 - 1.0
    abs.s	$f6, $f6		# |n/x^2 - 1.0|
#compare
	c.lt.s  	$f6, $f4	# |n/(x^2) - 1.0| < 0.00001
    bc1t        done
    nop
    j           loop        #next aproximantion value
    nop

done:
    move    $t0, $v0       
    li	    $v0, 1
	move	$a0, $t0      	#display user input
	syscall

    li 	$v0, 4
    la 	$a0, result     #print text
    syscall

    mov.s	$f12, $f3	# print the result
	li	    $v0, 2
	syscall
	li	    $v0, 10		# end program
	syscall




